# create this plotting routine
import os
import glob
import json

import numpy as np
import xarray as xr
import pandas as pd

import seaborn as sns
import matplotlib.pyplot as plt
#from sclouds.plot.helpers import TEXT_WIDTH_IN, path_python_figures
from sclouds.helpers import (path_input, path_stats_results, VARIABLES,
                             UNITS, LONGNAME)
from sclouds.plot.helpers import (TEXT_WIDTH_IN, TEXT_HEIGHT_IN,
                                  path_python_figures, import_matplotlib,
                                  file_format)

matplotlib = import_matplotlib()

a = {"AR-B-5-L5": {"mae_train": [0.14524089759437925, 0.05152709406602688, 0.050899400844412, 0.05063769111235752, 0.050526041077798366, 0.05046673243244941],
"mae_test": [0.14365018821479125, 0.049931091819172796, 0.04940244178965159, 0.04917055228911969, 0.04906646254125239, 0.0490119832797429],
"num_trained_models": [13039, 13041, 13041, 13041, 13041, 13041]},
"TR-B-5-L5": {"mae_train": [np.nan, 0.15029682454664053, 0.14812861383181483, 0.14716665514909208, 0.14671211408609017, 0.14644931653285104],
"mae_test": [np.nan, 0.14783225353075063, 0.1457656046972362, 0.14486141580988868, 0.1444371024818274, 0.14419885628416043],
"num_trained_models": [0, 13041, 13041, 13041, 13041, 13041]}}

b={"AR-5-L5": {"mae_train": [0.14947343723856985, 0.05170637187877764, 0.051046853116246314, 0.05076873161579089, 0.05064825442938635, 0.05058321317309037],
"mae_test": [0.1473750401040001, 0.05008451778932513, 0.04953092908247953, 0.049285716967393936, 0.04917422783427149, 0.049114944244963064],
"num_trained_models": [13041, 13041, 13041, 13041, 13041, 13041]},
"TR-5-L5": {"mae_train": [np.nan, 0.13278044956386378, 0.13247346840129312, 0.13278994850233447, 0.13322627055841652, 0.13364886865265554],
"mae_test": [np.nan, 0.13143033954377364, 0.1310368384110953, 0.13128882858658575, 0.13167460539862005, 0.13206596956513403],
"num_trained_models": [0, 13040, 13041, 13041, 13041, 13041]}}

#c={"AR-B-S-5-L5": {"mae_train": [0.12003113344242819, 0.04258437526117924, 0.0420656205325719, 0.04184933149781612, 0.0417566846309354, 0.04170766980527011],
#"mae_test": [0.1187169958056812, 0.041265365139812826, 0.04082846428896782, 0.04063682007365281, 0.040550131949489816, 0.040505112009342946],
# "num_trained_models": [13040, 13041, 13041, 13041, 13040, 13040]},
# "TR-B-S-5-L5": {"mae_train": [np.nan, 0.13663712393472663, 0.13466237621074012, 0.13378786831735667, 0.133373729631308, 0.13313482753752537],
#"mae_test": [np.nan, 0.13439637673918195, 0.13251418608839585, 0.1316921961908081, 0.131304939300249, 0.13108835413333525],
#"num_trained_models": [0, 13040, 13041, 13041, 13040, 13040]}}

#d={"AR-S-5-L5": {"mae_train": [0.12353306281081147, 0.04273253874279143, 0.04218748191425315, 0.041957629434537916, 0.04185806151188955, 0.04180377943285007],
#"mae_test": [0.12179874576634267, 0.041392163462252246, 0.040934652134280554, 0.04073199749371395, 0.04063985771427401, 0.04059039600280505],
#"num_trained_models": [13039, 13041, 13041, 13041, 13041, 13040]},
#"TR-S-5-L5": {"mae_train": [np.nan, 0.12070831152405047, 0.12043042581935656, 0.1207181350021212, 0.1211147914167422, 0.12149727373444696],
#"mae_test": [np.nan, 0.1194812081605406, 0.1191243985555403, 0.11935348053325869, 0.11970418672601812, 0.12005828699689035],
#"num_trained_models": [0, 13041, 13041, 13041, 13041, 13040]}}

e={"AR-T-5-L5": {"mae_train": [0.42831017989615056, 0.4207649808130694, 0.41790067671354014, 0.41513813022749363, 0.4124193962759328, 0.40980340493498585],
"mae_test": [0.45580294598892485, 0.4436837048285509, 0.44144506271693895, 0.43925569964869016, 0.4371041243449579, 0.43498974355150877],
"num_trained_models": [13040, 13041, 13040, 13041, 13040, 13040]},
"TR-T-5-L5": {"mae_train": [np.nan, 0.5549663822050634, 0.5518350383886117, 0.5487735204624171, 0.5459115320121826, 0.5432799286627731],
"mae_test": [np.nan, 0.5661724317703198, 0.5633031244545146, 0.5605232617837643, 0.557954210031656, 0.5555892257659448],
 "num_trained_models": [0, 13041, 13041, 13041, 13040, 13040]}}

#f={"AR-T-S-5-L5": {"mae_train": [0.35396112667208285, 0.3477396535645201, 0.3453602562029577, 0.34308936382437494, 0.3408406884215085, 0.33867463285639077],
#"mae_test": [0.3766846135569238, 0.36668074779219084, 0.36481742872311085, 0.3630212393790828, 0.3612411960535151, 0.3594892387212508],
#"num_trained_models": [13040, 13041, 13041, 13041, 13041, 13040]},
#"TR-T-S-5-L5": {"mae_train": [np.nan, 0.504514892913694, 0.5016682167169197, 0.4988850186021975, 0.4962816251299012, 0.493889205614256],
#"mae_test": [np.nan, 0.5147022107002909, 0.5120937495041041, 0.5095666016216038, 0.5072289650664656, 0.5050789285739216],
#"num_trained_models": [0, 13041, 13041, 13041, 13041, 13041]}}

a.update(b)
#a.update(c)
#a.update(d)
a.update(e)
#a.update(f)

data = a

# For when actually reading the json file.
#with open('/home/hanna/EX3_AR_SUMMARY/ar_mae_performance.json') as f:
    #data = json.load(f)
#print(data)

mae = 'num_trained_models'
mae = 'mae_test'

#for mae in ['num_trained_models', 'mae_test']:
subset = {}
for key, item in data.items():
    key = key.split('-5-')[0]
    subset[key] = item[mae]
df = pd.DataFrame.from_dict(subset).transpose()

fig, ax = plt.subplots(1, 1, figsize = (TEXT_WIDTH_IN, 0.5*TEXT_WIDTH_IN) )

ax = sns.heatmap(df, linewidths=0.1, annot=True, # fmt="d",
            cbar_kws={'label':'MAE'.format(mae)}, ax = ax, cmap = 'viridis', fmt = '.3f')

ax.set_ylabel('Model')
ax.set_xlabel('Lag')

plt.subplots_adjust(hspace = 0.2, top=0.97, bottom=0.20, left = 0.15, right = 1.0)
fig.savefig(path_python_figures + 'heat_ar_model_{}_score.png'.format(mae))
print('Finished {}'.format(mae))
